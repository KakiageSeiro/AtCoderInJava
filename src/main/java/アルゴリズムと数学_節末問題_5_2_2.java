import java.util.Scanner;

public class アルゴリズムと数学_節末問題_5_2_2 {
    public static void main() {
        // ■■■■■■■■■■■■■■■■■■■■

        Scanner sc = new Scanner(System.in);

        long n石の数 = sc.nextLong();

        // 問題文には明示的に記載されていないが、「石が1個の状態から石を取ることが出来ない」＝「最後の石を取る」＝「負け」＝「aが1のときに手番になる」 らしい
        // 問題文では「初めて石を取れなくなったほうが負け」なので、石が1個ある状態は1個取れるので、勝ちになるはずでは？とりあえず上にのっとって解く

        // 小さいNでのシミュレーション
        // N=1  1 ~ 1/2=0.5  負
        // N=2  1 ~ 2/2=1    勝
        // N=3  1 ~ 3/2=1.5  負
        // N=4  1 ~ 4/2=2    勝
        // N=5  1 ~ 5/2=2.5  勝
        // N=6  1 ~ 6/2=3    勝
        // N=7  1 ~ 7/2=3.5  負
        // N=8  1 ~ 8/2=4    勝
        // N=9  1 ~ 9/2=4.5  勝
        // N=10 1 ~ 10/2=5   勝
        // N=11 1 ~ 11/2=5.5 勝
        // N=12 1 ~ 12/2=6   勝
        // N=13 1 ~ 13/2=6.5 勝
        // N=14 1 ~ 14/2=7   勝
        // N=15 1 ~ 15/2=7.5 負

        // ~~奇数かつ、2で割るのを繰り返した結果1になる数値っぽい~~
        // N=2^k-1になる数値が正しい
        // 2^60 > 10^18
        // 2^60 =  1,152,921,504,606,846,976
        // 10^18 = 1,000,000,000,000,000,000
        for (int i = 1; i < 60; i++) {
            if(n石の数 == Math.pow(2, i) - 1) {
                System.out.println("Second");
                return;
            }
        }

        System.out.println("First");


        // ■■■■■■■■■■■■■■■■■■■■
    }
}

